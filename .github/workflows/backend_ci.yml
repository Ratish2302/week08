name: Backend CI - Test, Build and Push Images to ACR

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"

env:
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  # ==============================
  # Job 1: Test and lint backends
  # ==============================
  test_and_lint_backends:
    runs-on: ubuntu-latest
    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]

      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5433:5432"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

  # ==========================================
  # Job 2: Build and push Docker images to ACR
  # ==========================================
  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # üîê Login to Azure Container Registry using admin credentials
      - name: Login to Azure Container Registry (Docker)
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }} # e.g. wk08acr12345.azurecr.io
          username: ${{ secrets.REGISTRY_UN }}
          password: ${{ secrets.REGISTRY_PW }}

      # Debug step to confirm files exist and correct context
      - name: Debug repository structure
        run: |
          pwd
          ls -R backend

      # Build & Push Product Service
      - name: Build & push Product Service image
        working-directory: backend/product_service
        env:
          TAG: ${{ secrets.CONTAINER_REGISTRY }}/product_service:latest
        run: |
          echo "Building image: $TAG"
          docker build -t "$TAG" .
          docker push "$TAG"

      # Build & Push Order Service
      - name: Build & push Order Service image
        working-directory: backend/order_service
        env:
          TAG: ${{ secrets.CONTAINER_REGISTRY }}/order_service:latest
        run: |
          echo "Building image: $TAG"
          docker build -t "$TAG" .
          docker push "$TAG"
